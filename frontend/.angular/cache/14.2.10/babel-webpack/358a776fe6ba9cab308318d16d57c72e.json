{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/marko/OneDrive/Desktop/PIA Projekat 2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { USER_TYPES } from '@shared/consts';\nimport User from '@shared/models/user';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(accountService, utilService) {\n    this.accountService = accountService;\n    this.utilService = utilService;\n    this.user = new User();\n    this.password_confirmation = \"\";\n    this.errors = [];\n    this.messages = [];\n  }\n\n  get USER_TYPES() {\n    return USER_TYPES;\n  }\n\n  set_profile_picture(event) {\n    this.utilService.image_file_to_base64(event.target.files[0]).then(image => {\n      this.user.profile_picture = image;\n    });\n  }\n\n  change_user_type() {\n    this.user.type = this.user.type == USER_TYPES.client ? this.USER_TYPES.agency : this.USER_TYPES.client;\n  }\n\n  register() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.errors = [];\n      _this.messages = [];\n\n      if (_this.user.password.localeCompare(_this.password_confirmation) != 0) {\n        _this.errors.push('Lozinke se ne poklapaju.');\n\n        return;\n      }\n\n      yield _this.accountService.register(_this.user).then(() => _this.messages.push('Zahtev za registracijom je uspešno poslat.'), error => _this.errors = error.error);\n    })();\n  }\n\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"mappings":";;AACA,SAASA,SAAT,QAAkC,eAAlC;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AASA,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAb,CAAkC;EAYhCC,YAAoBC,cAApB,EAA4DC,WAA5D,EAAoF;IAAhE;IAAwC;IAN5D,YAAa,IAAIJ,IAAJ,EAAb;IACA,6BAAgC,EAAhC;IAEA,cAAmB,EAAnB;IACA,gBAAqB,EAArB;EAEyF;;EAVpE,IAAVD,UAAU;IACnB,OAAOA,UAAP;EACD;;EAUDM,mBAAmB,CAACC,KAAD,EAAM;IACvB,KAAKF,WAAL,CAAiBG,oBAAjB,CAAsCD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAtC,EAA6DC,IAA7D,CACGC,KAAD,IAAkB;MAChB,KAAKC,IAAL,CAAUC,eAAV,GAA4BF,KAA5B;IACD,CAHH;EAKD;;EAEDG,gBAAgB;IACd,KAAKF,IAAL,CAAUG,IAAV,GAAiB,KAAKH,IAAL,CAAUG,IAAV,IAAkBhB,UAAU,CAACiB,MAA7B,GAAsC,KAAKjB,UAAL,CAAgBkB,MAAtD,GAA+D,KAAKlB,UAAL,CAAgBiB,MAAhG;EACD;;EAEKE,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,MAAL,GAAc,EAAd;MACA,KAAI,CAACC,QAAL,GAAgB,EAAhB;;MAEA,IAAI,KAAI,CAACR,IAAL,CAAUS,QAAV,CAAmBC,aAAnB,CAAiC,KAAI,CAACC,qBAAtC,KAAgE,CAApE,EAAuE;QACrE,KAAI,CAACJ,MAAL,CAAYK,IAAZ,CAAiB,0BAAjB;;QACA;MACD;;MAED,MAAM,KAAI,CAACrB,cAAL,CAAoBe,QAApB,CAA6B,KAAI,CAACN,IAAlC,EAAwCF,IAAxC,CACJ,MAAM,KAAI,CAACU,QAAL,CAAcI,IAAd,CAAmB,4CAAnB,CADF,EAEHC,KAAD,IAA8B,KAAI,CAACN,MAAL,GAAcM,KAAK,CAACA,KAF9C,CAAN;IATY;EAab;;AAvC+B,CAAlC;AAAaxB,qBAAqB,eALjCH,SAAS,CAAC;EACT4B,QAAQ,EAAE,kBADD;EAETC,WAAW,EAAE,+BAFJ;EAGTC,SAAS,EAAE,CAAC,8BAAD;AAHF,CAAD,CAKwB,GAArB3B,qBAAqB,CAArB;SAAAA","names":["Component","USER_TYPES","User","RegistrationComponent","constructor","accountService","utilService","set_profile_picture","event","image_file_to_base64","target","files","then","image","user","profile_picture","change_user_type","type","client","agency","register","errors","messages","password","localeCompare","password_confirmation","push","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\marko\\OneDrive\\Desktop\\PIA Projekat 2\\frontend\\src\\app\\features\\account\\registration\\registration.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\nimport { USER_TYPES } from '@shared/consts';\nimport User from '@shared/models/user';\nimport { AccountService } from '@shared/services/account.service';\nimport { UtilService } from '@shared/services/util.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n\n  public get USER_TYPES() {\n    return USER_TYPES; \n  }\n\n  user: User = new User();\n  password_confirmation: string = \"\";\n\n  errors: string[] = [];\n  messages: string[] = [];\n\n  constructor(private accountService: AccountService, private utilService: UtilService) { }\n\n  set_profile_picture(event) {\n    this.utilService.image_file_to_base64(event.target.files[0]).then(\n      (image: string) => {\n        this.user.profile_picture = image;\n      }\n    );\n  }\n\n  change_user_type() {\n    this.user.type = this.user.type == USER_TYPES.client ? this.USER_TYPES.agency : this.USER_TYPES.client;\n  }\n\n  async register() {\n    this.errors = [];\n    this.messages = [];\n\n    if (this.user.password.localeCompare(this.password_confirmation) != 0) {\n      this.errors.push('Lozinke se ne poklapaju.');\n      return;\n    }\n\n    await this.accountService.register(this.user).then(\n      () => this.messages.push('Zahtev za registracijom je uspešno poslat.'),\n      (error: HttpErrorResponse) => this.errors = error.error\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}