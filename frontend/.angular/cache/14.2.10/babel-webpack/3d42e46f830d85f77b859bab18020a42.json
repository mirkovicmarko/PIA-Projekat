{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/marko/OneDrive/Desktop/PIA Projekat 2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared/services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r1);\n  }\n}\n\nexport class LoginComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.errors = [];\n  }\n\n  ngOnInit() {}\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.errors = [];\n      yield _this.accountService.login(_this.username, _this.password).then(() => _this.router.navigate(['radionice/prikazi_listu'], {\n        queryParams: {\n          tip: 'aktuelne'\n        }\n      }), error => _this.errors = error.error);\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[\"action\", \"javascript:void(0);\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"autocomplete\", \"on\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"text\", \"name\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [2, \"border-top\", \"4px solid transparent\"], [\"colspan\", \"2\", 2, \"text-align\", \"right\"], [\"routerLink\", \"/account/forgotten_password\"], [\"class\", \"errors\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"click\"], [1, \"errors\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\")(2, \"tr\")(3, \"td\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Korisni\\u010Dko ime\\u00A0\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"td\")(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\")(10, \"label\", 3);\n      i0.ɵɵtext(11, \"Lozinka\\u00A0\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"td\")(13, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tr\", 5)(15, \"td\", 6)(16, \"a\", 7);\n      i0.ɵɵtext(17, \"Zaboravili ste lozinku?\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(18, LoginComponent_p_18_Template, 2, 1, \"p\", 8);\n      i0.ɵɵelementStart(19, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(20, \"Prijavi se\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"table[_ngcontent-%COMP%] {\\r\\n    border-collapse: collapse;\\r\\n    margin: 0 auto 8px auto;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin: 8px auto 0 auto;\\r\\n}\\r\\n\\r\\n.errors[_ngcontent-%COMP%] {\\r\\n    margin: 0;\\r\\n    text-align: center;\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsVUFBVTtBQUNkIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG8gOHB4IGF1dG87XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogOHB4IGF1dG8gMCBhdXRvO1xyXG59XHJcblxyXG4uZXJyb3JzIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAyBIA;IAA+CA;IAAWA;;;;;IAAXA;IAAAA;;;;ACdnD,OAAM,MAAOC,cAAP,CAAqB;EAMzBC,YAAoBC,cAApB,EAA4DC,MAA5D,EAA0E;IAAtD;IAAwC;IAF5D,cAAmB,EAAnB;EAE+E;;EAE/EC,QAAQ,IAAY;;EAEdC,KAAK;IAAA;;IAAA;MACT,KAAI,CAACC,MAAL,GAAc,EAAd;MAEA,MAAM,KAAI,CAACJ,cAAL,CAAoBG,KAApB,CAA0B,KAAI,CAACE,QAA/B,EAAyC,KAAI,CAACC,QAA9C,EAAwDC,IAAxD,CACJ,MAAM,KAAI,CAACN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,yBAAD,CAArB,EAAkD;QAAEC,WAAW,EAAE;UAAEC,GAAG,EAAE;QAAP;MAAf,CAAlD,CADF,EAEHC,KAAD,IAAW,KAAI,CAACP,MAAL,GAAcO,KAAK,CAACA,KAF3B,CAAN;IAHS;EAOV;;AAjBwB;;;mBAAdb,gBAAcD;AAAA;;;QAAdC;EAAcc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX3BnB,gCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC;MAIsCA;MAAoBA;MAE9CA,2BAAI,CAAJ,EAAI,OAAJ,EAAI,CAAJ;MACqDA;QAAA;MAAA;MAAjDA;MAGRA,2BAAI,CAAJ,EAAI,IAAJ,EAAI,EAAJ,EAAI,OAAJ,EAAI,CAAJ;MAE8BA;MAAaA;MAEvCA,4BAAI,EAAJ,EAAI,OAAJ,EAAI,CAAJ;MACqDA;QAAA;MAAA;MAAjDA;MAGRA,+BAA8C,EAA9C,EAA8C,IAA9C,EAA8C,CAA9C,EAA8C,EAA9C,EAA8C,GAA9C,EAA8C,CAA9C;MAEoDA;MAAuBA;MAK/EA;MAEAA;MAAQA;QAAA,OAASoB,WAAT;MAAgB,CAAhB;MAAgCpB;MAAUA;;;;MApBWA;MAAAA;MAQAA;MAAAA;MAUxCA;MAAAA","names":["i0","LoginComponent","constructor","accountService","router","ngOnInit","login","errors","username","password","then","navigate","queryParams","tip","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\marko\\OneDrive\\Desktop\\PIA Projekat 2\\frontend\\src\\app\\features\\account\\login\\login.component.html","C:\\Users\\marko\\OneDrive\\Desktop\\PIA Projekat 2\\frontend\\src\\app\\features\\account\\login\\login.component.ts"],"sourcesContent":["<form action=\"javascript:void(0);\">\n    <table>\n        <tr>\n            <td>\n                <label for=\"username\">Korisničko ime&nbsp;</label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"username\" id=\"username\" [(ngModel)]=\"username\" autocomplete=\"on\" />\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label for=\"password\">Lozinka&nbsp;</label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"password\" id=\"password\" [(ngModel)]=\"password\" />\n            </td>\n        </tr>\n        <tr style=\"border-top: 4px solid transparent\">\n            <td colspan=\"2\" style=\"text-align: right\">\n                <a routerLink=\"/account/forgotten_password\">Zaboravili ste lozinku?</a>\n            </td>\n        </tr>\n    </table>\n    \n    <p *ngFor=\"let error of errors\" class=\"errors\">{{ error }}</p>\n    \n    <button (click)=\"login()\" type=\"submit\">Prijavi se</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '@shared/services/account.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n  \n  errors: string[] = [];\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  ngOnInit(): void { }\n\n  async login() {\n    this.errors = [];\n\n    await this.accountService.login(this.username, this.password).then(\n      () => this.router.navigate(['radionice/prikazi_listu'], { queryParams: { tip: 'aktuelne' }}),\n      (error) => this.errors = error.error\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}